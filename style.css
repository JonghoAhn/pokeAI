html {
    font-size: 15px;
}

@media (min-width: 640px) {
    html {
        font-size: 16px;
    }
}

body {
    font-family: 'Jua', sans-serif;
    background-color: #f0f9ff;
    -webkit-text-size-adjust: 100%;
}

/* --- Scaling Styles --- */
#game-container {
    width: 768px; /* Design width (based on max-w-2xl) */
    height: 1024px; /* Taller design height for better mobile fit */
    transform-origin: center;
    transition: transform 0.1s ease-out;
    border-radius: 1rem; /* sm:rounded-2xl */
    overflow: hidden;
}

.screen { display: none; flex-direction: column; width: 100%; height: 100%; }
.screen.active { display: flex; }
.pokemon-card { transition: transform 0.3s ease, box-shadow 0.3s ease; }
.pokemon-card:hover { transform: translateY(-5px); box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1); }
.battle-pokemon { transition: transform 0.3s ease-in-out; min-width: 4rem; min-height: 4rem; }
.modal { display: none; flex-direction: column; }
.modal.active { display: flex; }

.lunge-animation { animation: lunge 0.5s ease-in-out; }
.shake { animation: shake-animation 0.4s; }

@keyframes lunge {
    50% { transform: translate(10px, -10px) scale(1.1); }
    100% { transform: translate(0, 0) scale(1); }
}

@keyframes shake-animation {
    0%, 100% { transform: translateX(0); }
    20%, 60% { transform: translateX(-5px); }
    40%, 80% { transform: translateX(5px); }
}

.type-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); gap: 0.5rem; }

/* --- Attack Effect Styles --- */
.effect {
    position: absolute;
    /* Base position is attacker's center. Will be overridden for stationary effects. */
    left: var(--start-x);
    top: var(--start-y);
    /* All effects should be centered on their coordinates. */
    transform: translate(-50%, -50%);
}

/* 노말 타입 이펙트 (Moving) */
.effect-노말 {
    width: 60px;
    height: 60px;
    border: 5px solid rgba(168, 168, 120, 0.8);
    border-radius: 50%;
    animation: move-and-fade 0.5s ease-out forwards;
}
@keyframes move-and-fade {
    0% { transform: translate(-50%, -50%) scale(0.2); opacity: 1; }
    100% { transform: translate(calc(var(--end-translate-x) - 50%), calc(var(--end-translate-y) - 50%)) scale(1); opacity: 0; }
}

/* 불 타입 이펙트 (Moving) */
.effect-불 {
    width: 80px;
    height: 80px;
    background: radial-gradient(circle, rgba(240, 128, 48, 1) 0%, rgba(240, 128, 48, 0) 70%);
    border-radius: 50%;
    animation: move-and-explode 0.6s ease-out forwards;
}
@keyframes move-and-explode {
    0% { transform: translate(-50%, -50%) scale(0.2); }
    50% { transform: translate(calc(var(--end-translate-x) - 50%), calc(var(--end-translate-y) - 50%)) scale(0.5); }
    100% { transform: translate(calc(var(--end-translate-x) - 50%), calc(var(--end-translate-y) - 50%)) scale(2); opacity: 0; }
}

/* 물 타입 이펙트 (Moving) */
.effect-물::before {
    content: '';
    position: absolute;
    width: 50px;
    height: 50px;
    border: 5px solid #6890f0;
    border-radius: 50%;
    animation: move-and-splash 0.6s ease-out forwards;
}
@keyframes move-and-splash {
    0% { transform: translate(-50%, -50%) scale(0); opacity: 1; }
    50% { transform: translate(calc(var(--end-translate-x) - 50%), calc(var(--end-translate-y) - 50%)) scale(1); opacity: 1; }
    100% { transform: translate(calc(var(--end-translate-x) - 50%), calc(var(--end-translate-y) - 50%)) scale(1.2); opacity: 0; border-width: 0px; }
}

/* 전기 타입 이펙트 (Stationary) - CORRECTED */
.effect-전기 {
    width: 100px;
    height: 100px;
    background: radial-gradient(circle, rgba(255, 255, 0, 0.8), transparent 60%);
    border-radius: 50%;
    /* Position directly on the defender */
    left: var(--end-x);
    top: var(--end-y);
    animation: electric-shock 0.4s forwards;
}
@keyframes electric-shock {
    /* Animate at the fixed position */
    0% { transform: translate(-50%, -50%) scale(0.5); opacity: 1; }
    50% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 0; }
}

/* 풀 타입 이펙트 (Moving) */
.effect-풀 {
    width: 20px;
    height: 30px;
    background-color: #78c850;
    border-radius: 50% 0;
    animation: move-and-spin 0.7s ease-out forwards;
}
@keyframes move-and-spin {
    from { transform: translate(-50%, -50%) rotate(0deg); opacity: 1; }
    to { transform: translate(calc(var(--end-translate-x) - 50%), calc(var(--end-translate-y) - 50%)) rotate(720deg); opacity: 0; }
}

/* 격투 타입 이펙트 (Moving) */
.effect-격투 {
    width: 50px;
    height: 50px;
    background-color: rgba(194, 46, 40, 0.7);
    border-radius: 10px;
    animation: punch-effect 0.4s ease-in forwards;
}
@keyframes punch-effect {
    0% { transform: translate(-50%, -50%) scale(0.5); }
    50% { transform: translate(calc(var(--end-translate-x) - 50%), calc(var(--end-translate-y) - 50%)) scale(1.2); }
    100% { transform: translate(calc(var(--end-translate-x) - 50%), calc(var(--end-translate-y) - 50%)) scale(1); opacity: 0; }
}

/* 에스퍼 타입 이펙트 (Stationary) - CORRECTED */
.effect-에스퍼 {
    width: 70px;
    height: 70px;
    border: 4px solid #f85888;
    border-radius: 50%;
    box-shadow: 0 0 15px #f85888;
    /* Position directly on the defender */
    left: var(--end-x);
    top: var(--end-y);
    animation: psychic-wave 0.7s ease-out forwards;
}
@keyframes psychic-wave {
    /* Animate at the fixed position */
    0% { transform: translate(-50%, -50%) scale(0); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1.5); opacity: 0; }
}
